{
	"lock": true,

	"name": "@albedosehen/stoat",
  "version": "1.0.0",
  "description": "Stoat is a simple and modular logging framework with support for multiple transports.",
  "author": "Shon Thomas",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/albedosehen/stoat"
  },
  "homepage": "https://github.com/albedosehen/stoat",
  "keywords": [
    "logging",
    "structured-logging",
    "async-logging",
    "log",
    "logger",
    "framework",
    "deno",
    "typescript",
    "opentelemetry",
    "otel",
    "observability",
    "tracing",
    "monitoring",
    "performance",
    "json",
    "transport",
    "transports",
    "buffer",
    "serialization",
    "context",
    "child-logger",
    "microservices",
    "distributed",
    "sanitization",
    "security"
  ],
	"exports": {
		".": "./mod.ts",
		"./loggers": "./src/loggers/mod.ts",
		"./types": "./src/types/mod.ts",
		"./utils": "./src/utils/mod.ts",
		"./errors": "./src/errors/errors.ts",
		"./stoat": "./src/stoat/mod.ts"
	},
	"compilerOptions": {
		"strict": true
	},
	"tasks": {
		"test": "deno test --allow-read --allow-write --allow-net --allow-sys -q",
		"test:watch": "deno test --allow-read --allow-write --allow-net --allow-sys --watch -q",
		"test:coverage": "deno test --allow-read --allow-write --allow-net --allow-sys --coverage=coverage/ -q",
		"test:unit": "deno test src/tests/unit --allow-read --allow-write --allow-net --allow-sys -q",
		"test:integration": "deno test src/tests/integration/ --allow-read --allow-write --allow-net --allow-sys -q",
		"coverage": "deno coverage coverage/ --html",
		"coverage:lcov": "deno coverage coverage/ --lcov --output=coverage.lcov",
		"bench": "deno bench --allow-read --allow-write --allow-net --allow-sys",
		"example:basic": "deno run --allow-read --allow-write examples/basic.ts",
		"example:structured": "deno run --allow-read --allow-write examples/structured.ts",
		"example:async": "deno run --allow-read --allow-write examples/async.ts",
		"example:trading": "deno run --allow-read --allow-write examples/trading.ts",
		"check": "deno check mod.ts src/",
		"lint": "deno lint",
		"fmt": "deno fmt",
		"fmt:check": "deno fmt --check"
	},
	"lint": {
		"include": ["src/"],
		"exclude": [],
		"rules": {
			"tags": ["recommended"],
			"include": [
				"ban-untagged-todo",
				"no-unused-vars",
				"no-explicit-any",
				"no-irregular-whitespace",
				"default-param-last",
				"no-deprecated-deno-api",
				"no-import-assign",
				"no-sloppy-imports",
				"no-delete-var",
				"no-useless-rename",
				"no-extra-boolean-cast",
				"no-invalid-regexp"
			],
			"exclude": [
				"require-await"
			]
		}
	},

	"fmt": {
		"useTabs": false,
		"lineWidth": 120,
		"indentWidth": 2,
		"semiColons": false,
		"singleQuote": true,
		"proseWrap": "preserve",
		"include": ["src/"],
		"exclude": []
	},

	"imports": {
		"@std/assert": "jsr:@std/assert@^1.0.0",
		"@std/testing": "jsr:@std/testing@^1.0.0",
		"@std/testing/bdd": "jsr:@std/testing@^1.0.0/bdd",
		"@std/testing/mock": "jsr:@std/testing@^1.0.0/mock",
		"@std/streams": "jsr:@std/streams@^1.0.0",
		"@std/async": "jsr:@std/async@^1.0.0"
	},
	"exclude": []
}
